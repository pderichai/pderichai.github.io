{
    "componentChunkName": "component---src-templates-post-jsx",
    "path": "/blog/a-minimum-viable-tmux-config/",
    "result": {"data":{"mdx":{"id":"4fbfa7ad-4f4e-5e40-9261-cad413a5081b","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"A Minimum Viable Tmux Config\",\n  \"date\": \"2020-05-27T00:00:00.000Z\",\n  \"lastUpdated\": \"2022-02-13T00:00:00.000Z\",\n  \"featuredImage\": \"featured-image.png\",\n  \"featuredImageAltText\": \"Screenshot of Tmux in use\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When I first started using Tmux, I was frustrated with its unintuitive\\ndefaults. Over time, I pinpointed the features that I used the most and made\\nthem easier to access through better keybindings. I also customized my color\\nscheme and status bar and made several quality of life improvements.\"), mdx(\"p\", null, \"When going through this walkthrough, it's best to focus on \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"what\"), \" I'm\\nconfiguring rather than \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"how\"), \". Create a small custom config instead of copying\\nsomeone else's since understanding how to extend and customize your tools is\\nthe key to unlocking their full potential.\"), mdx(\"h1\", null, \"What can Tmux do?\"), mdx(\"p\", null, \"The main pieces of functionality that you will use in Tmux are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Splitting Tmux \\\"windows\\\" into multiple \\\"panes,\\\" each of which is a separate\\nshell session.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Creating and switching between Tmux \\\"windows\\\" (which are more like tabs),\\neach of which contains a number of panes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Creating Tmux sessions which are each a collection of \\\"windows\\\" and \\\"panes.\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Detaching/switching from a Tmux session so that you can pick up where you\\nleft off with all your windows and panes as you last had them.\")), mdx(\"h1\", null, \"Better Keybindings\"), mdx(\"p\", null, \"Let's set up better keybindings for the parts of Tmux that we most commonly\\nuse.\"), mdx(\"h2\", null, \"Tmux Prefix\"), mdx(\"p\", null, \"The Tmux prefix is a key chord that is used before all Tmux commands. I've\\ngotten used to using the default, which is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C-b\"), \" (control followed by \\\"b\\\"\\nwithout letting go of control), but it's common to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C-a\"), \" instead. If you\\nwant to remap the prefix to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C-a\"), \", add this to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".tmux.conf\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"bind-key C-a send-prefix\\n\")), mdx(\"h2\", null, \"Panes\"), mdx(\"p\", null, \"Tmux \\\"panes\\\" are each a separate shell session, and each window holds one or\\nmore panes. You can add panes to a window in a way that is similar to splitting\\nin a text editor.\"), mdx(\"p\", null, \"Let's set up these keybindings:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Vertically split the window with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C-b |\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/37591bf0ba7f2c84522a2fe218dd9011/vertical-split.gif\",\n    \"alt\": \"Vertical split in Tmux\"\n  }))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Horizontally split the window with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C-b -\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Navigate between panes with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C-b [h, j, k, l]\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"These are Vim-like keybindings where \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"h\"), \" is left, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"j\"), \" is down, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"k\"), \" is up,\\nand \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"l\"), \" is right.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Resize panes with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C-b [H, J, K, L]\"), \" (can repeatedly press \", \"[H, J, K, L]\", \")\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Again, these are Vim-like keybindings where \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"H\"), \" expands left, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"J\"), \" expands\\ndown, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"K\"), \" expands up, and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"L\"), \" expands right.\")))), mdx(\"p\", null, \"Add the following to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".tmux.conf\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# Split panes using | and -. Start the new pane at the path of the current pane.\\nunbind-key '\\\"'\\nunbind-key %\\nbind-key | split-window -h -c \\\"#{pane_current_path}\\\"\\nbind-key - split-window -v -c \\\"#{pane_current_path}\\\"\\n\\n# Vim-like pane navigation and resizing.\\nbind-key h select-pane -L\\nbind-key j select-pane -D\\nbind-key k select-pane -U\\nbind-key l select-pane -R\\nbind-key -r H resize-pane -L 5\\nbind-key -r J resize-pane -D 5\\nbind-key -r K resize-pane -U 5\\nbind-key -r L resize-pane -R 5\\n\")), mdx(\"h2\", null, \"Windows\"), mdx(\"p\", null, \"Tmux \\\"windows\\\" are like the tabs in a web browser. Each window contains a\\nnumber of \\\"panes\\\", each of which is a separate shell session. The default\\nkeybindings for managing windows are actually quite good, and I'll list out the\\nimportant ones here:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a new window with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C-b c\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to a particular window with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C-b [0-9]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to the next window with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C-b n\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to the previous window with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C-b p\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Kill the current window with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C-b &\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Kill a particular window with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C-b :kill-window -t [0-9]\"), \".\")), mdx(\"h2\", null, \"Sessions\"), mdx(\"p\", null, \"Tmux \\\"sessions\\\" are collections of \\\"windows\\\" and \\\"panes\\\". I often have one\\nsession for each project I'm working on.\"), mdx(\"p\", null, \"Let's set up the following keybindings:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a new session with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C-b C-c\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Search for a session by name with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C-b C-f\"), \".\")), mdx(\"p\", null, \"Add the following to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".tmux.conf\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# Create new session.\\nbind-key C-c new-session -c \\\"~\\\"\\n\\n# Search for a session.\\nbind-key C-f command-prompt -p find-session 'switch-client -t %%'\\n\")), mdx(\"h1\", null, \"Status Bar & Color Scheme\"), mdx(\"p\", null, \"I really like the Gruvbox\", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-1\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, \"1\")), \" Vim color scheme, so I use a Gruvbox-like color\\nscheme in Tmux heavily inspired by\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/egel/tmux-gruvbox\"\n  }, \"egel/tmux-gruvbox\"), \".\"), mdx(\"p\", null, \"Add the following to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".tmux.conf\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# COLORSCHEME: gruvbox dark\\nset-option -g status \\\"on\\\"\\n\\nset-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1\\n\\nset-window-option -g window-status-activity-style bold,underscore\\n\\nset-option -g pane-active-border-style fg=colour250 #fg2\\nset-option -g pane-border-style fg=colour237 #bg1\\n\\nset-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1\\n\\nset-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1\\n\\nset-option -g display-panes-active-colour colour250 #fg2\\nset-option -g display-panes-colour colour237 #bg1\\n\\nset-option -g status-justify \\\"left\\\"\\nset-option -g status-left-style none\\nset-option -g status-left-length \\\"80\\\"\\nset-option -g status-right-style none\\nset-option -g status-right-length \\\"80\\\"\\nset-window-option -g window-status-separator \\\"\\\"\\n\\nset-option -g status-left \\\"#[fg=colour248, bg=colour241] #S #[fg=colour241, bg=colour237, nobold, noitalics, nounderscore]\\\"\\nset-option -g status-right \\\"#[fg=colour248, bg=colour237, nobold, noitalics, nounderscore]#{?client_prefix,#[reverse] \\u2328#[noreverse],}#[fg=colour237, bg=colour248] #h \\\"\\n\\nset-window-option -g window-status-current-format \\\" #[fg=colour239, bg=colour214] #I |#[fg=colour239, bg=colour214, bold] #W \\\"\\n\\nset-window-option -g window-status-format \\\" #[fg=#{?window_bell_flag,colour235,colour223},bg=#{?window_bell_flag,colour167,colour239}] #I |#[fg=#{?window_bell_flag,colour235,colour223}, bg=#{?window_bell_flag,colour167,colour239}] #W \\\"\\n\")), mdx(\"p\", null, \"If you're interested in a version of the status bar settings that use\\nPowerline\", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-2\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-2\",\n    \"className\": \"footnote-ref\"\n  }, \"2\")), \" symbols, check out my Tmux config on\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pderichai/dotfiles/blob/master/tmux.conf\"\n  }, \"GitHub\"), \".\"), mdx(\"h1\", null, \"Quality of Life Improvements\"), mdx(\"p\", null, \"There's a few things in my config that make working with Tmux easier:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# Reload tmux config with <prefix>-r.\\nbind-key r source-file ~/.tmux.conf \\\\; display '~/.tmux.conf sourced'\\n\\n# Set scroll history to 100,000 lines.\\nset-option -g history-limit 100000\\n\\n# Lower the time it takes to register ESC.\\nset -s escape-time 0\\n\\n# Mouse mode on.\\nset -g mouse on\\n\\n# When scrolling with mouse wheel, reduce number of scrolled rows per tick to 1.\\nbind-key -T copy-mode-vi WheelUpPane select-pane \\\\; send-keys -X -N 1 scroll-up\\nbind-key -T copy-mode-vi WheelDownPane select-pane \\\\; send-keys -X -N 1 scroll-down\\n\\n# Use Vim keybindings in copy mode.\\nset-window-option -g mode-keys vi\\n\\n# Renumber windows when a window is closed.\\nset -g renumber-windows on\\n\\n# Turn on activity monitors.\\nset -g monitor-activity on\\nset -g visual-activity off\\n\")), mdx(\"h1\", null, \"Conclusion\"), mdx(\"p\", null, \"That basically covers my entire Tmux config, which you can check out on\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pderichai/dotfiles/blob/master/tmux.conf\"\n  }, \"GitHub\"), \".\\nI hope this walkthrough helps you get started with Tmux!\"), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-1\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/morhetz/gruvbox\"\n  }, \"https://github.com/morhetz/gruvbox\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-2\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/powerline/fonts\"\n  }, \"https://github.com/powerline/fonts\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-2\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"When I first started using Tmux, I was frustrated with its unintuitive\ndefaults. Over time, I pinpointed the features that I used the most and made\nthem easier…","frontmatter":{"title":"A Minimum Viable Tmux Config","date":"May 27, 2020","lastUpdated":"Feb 13, 2022","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/ab314/featured-image.png","srcSet":"/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/ccab7/featured-image.png 840w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/f566f/featured-image.png 1680w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/ab314/featured-image.png 3360w","sizes":"(min-width: 3360px) 3360px, 100vw"},"sources":[{"srcSet":"/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/2c2f1/featured-image.webp 840w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/bf748/featured-image.webp 1680w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/17756/featured-image.webp 3360w","type":"image/webp","sizes":"(min-width: 3360px) 3360px, 100vw"}]},"width":3360,"height":2050}}},"openGraphImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/b5380/featured-image.png","srcSet":"/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/a0e1b/featured-image.png 300w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/86184/featured-image.png 600w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/b5380/featured-image.png 1200w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/6b063/featured-image.png 2400w","sizes":"(min-width: 1200px) 1200px, 100vw"},"sources":[{"srcSet":"/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/c7da1/featured-image.webp 300w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/22c65/featured-image.webp 600w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/81547/featured-image.webp 1200w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/19ade/featured-image.webp 2400w","type":"image/webp","sizes":"(min-width: 1200px) 1200px, 100vw"}]},"width":1200,"height":630}}},"twitterImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/0ccb9/featured-image.png","srcSet":"/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/0c964/featured-image.png 300w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/2bdcf/featured-image.png 600w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/0ccb9/featured-image.png 1200w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/6277f/featured-image.png 2400w","sizes":"(min-width: 1200px) 1200px, 100vw"},"sources":[{"srcSet":"/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/091a1/featured-image.webp 300w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/763bf/featured-image.webp 600w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/31cc3/featured-image.webp 1200w,\n/static/a0d92a9b0c1ce8cb77544b6cd61b5eee/09f85/featured-image.webp 2400w","type":"image/webp","sizes":"(min-width: 1200px) 1200px, 100vw"}]},"width":1200,"height":628}}},"featuredImageAltText":"Screenshot of Tmux in use"}}},"pageContext":{"id":"4fbfa7ad-4f4e-5e40-9261-cad413a5081b"}},
    "staticQueryHashes": ["2213392605","2215485794"]}